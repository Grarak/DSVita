float3 in oColor : TEXCOORD0;
float2 in oTexCoords : TEXCOORD1;
float in oPolygonIndex : TEXCOORD2;

uniform sampler2D tex : TEXUNIT0;
uniform sampler2D palTex : TEXUNIT1;
uniform sampler2D attrTex : TEXUNIT2;

short readTex8(int addr) {
    short addrX = (addr >> 2) & 0x1FF;
    short addrY = addr >> 11;
    float x = float(addrX) / 511.0;
    float y = float(addrY) / 255.0;
    return short(tex2D(tex, float2(x, y))[addr & 3] * 255.0);
}

short readTex16Aligned(int addr) {
    short addrX = (addr >> 2) & 0x1FF;
    short addrY = addr >> 11;
    float x = float(addrX) / 511.0;
    float y = float(addrY) / 255.0;
    float4 value = tex2D(tex, float2(x, y));
    short entry = short(addr & 2);
    return short(value[entry] * 255.0) | (short(value[entry + 1] * 255.0) << 8);
}

float4 readPal(short index) {
    short indexX = index & 0x1FF;
    short indexY = index >> 9;
    float x = float(indexX) / 511.0;
    float y = float(indexY) / 95.0;
    return tex2D(palTex, float2(x, y));
}

float3 normRgb5(short color) {
    return float3(float(color & 0x1F), float((color >> 5) & 0x1F), float((color >> 10) & 0x1F)) / 31.0;
}

float4 a3i5Tex(short palAddr, int addrOffset, short s, short t, short sizeS) {
    int addr = addrOffset + t * sizeS + s;

    short palIndex = readTex8(addr);
    if (palIndex == 0) {
        discard;
    }

    short palOffset = palAddr << 3;
    float4 color = readPal(palOffset + (palIndex & 0x1F));
    float alpha = float((palIndex >> 5) & 0x3) / 7.0;
    return float4(color.rgb, alpha);
}

float4 pal4Tex(short palAddr, int addrOffset, short s, short t, short sizeS, bool transparent0) {
    int addr = addrOffset + (t * sizeS + s) / 4;

    int palIndex = readTex8(addr);
    if (transparent0 && palIndex == 0) {
        discard;
    }
    palIndex = (palIndex >> ((s & 0x3) * 2)) & 0x03;

    int palOffset = int(palAddr) << 2;
    float4 color = readPal(palOffset + palIndex);
    return float4(color.rgb, 1.0);
}

float4 pal16Tex(short palAddr, int addrOffset, int s, int t, int sizeS, bool transparent0) {
    int addr = addrOffset + (t * sizeS + s) / 2;

    int palIndex = readTex8(addr);
    if (transparent0 && palIndex == 0) {
        discard;
    }
    palIndex = (palIndex >> ((s & 0x1) * 4)) & 0x0F;

    int palOffset = int(palAddr) << 3;
    float4 color = readPal(palOffset + palIndex);
    return float4(color.rgb, 1.0);
}

float4 pal256Tex(short palAddr, int addrOffset, int s, int t, int sizeS, bool transparent0) {
    int addr = addrOffset + (t * sizeS + s);

    int palIndex = readTex8(addr);
    if (transparent0 && palIndex == 0) {
        discard;
    }

    int palOffset = int(palAddr) << 3;
    float4 color = readPal(palOffset + palIndex);
    return float4(color.rgb, 1.0);
}

float4 a5i3Tex(short palAddr, int addrOffset, short s, short t, short sizeS) {
    int addr = addrOffset + t * sizeS + s;

    short palIndex = readTex8(addr);
    if (palIndex == 0) {
        discard;
    }

    int palOffset = int(palAddr) << 3;
    float4 color = readPal(palOffset + (palIndex & 0x07));
    float alpha = float((palIndex >> 3) & 0x1F) / 31.0;
    return float4(color.rgb, alpha);
}

float4 directTex(int addrOffset, short s, short t, short sizeS) {
    int addr = (addrOffset + t * sizeS + s) * 2;
    int color = readTex16Aligned(addr);
    if (color == 0) {
        discard;
    }
    return float4(normRgb5(color), 1.0);
}

void main(out float4 color : COLOR) {
    short polygonIndex = short(oPolygonIndex);

    polygonIndex <<= 1;
    float x = float(polygonIndex & 0x7F) / 127.0;
    float y = float(polygonIndex >> 7) / 127.0;
    float4 value = tex2D(attrTex, float2(x, y));

    int addrOffset = int((short(value[0] * 255.0) | (short(value[1] * 255.0) << 8))) << 3;
    short texImageParam = short(value[2] * 255.0) | (short(value[3] * 255.0) << 8);

    polygonIndex += 1;
    x = float(polygonIndex & 0x7F) / 127.0;
    y = float(polygonIndex >> 7) / 127.0;
    value = tex2D(attrTex, float2(x, y));
    short palAddr = short(value[0] * 255.0) | (short(value[1] * 255.0) << 8);

    short sizeS = 8 << ((texImageParam >> 4) & 0x7);
    short sizeT = 8 << ((texImageParam >> 7) & 0x7);
    short s = short(oTexCoords.x);
    short t = short(oTexCoords.y);

    bool repeatS = (texImageParam & 0x1) == 1;
    bool repeatT = ((texImageParam >> 1) & 0x1) == 1;
    if (repeatS) {
        bool flip = ((texImageParam >> 2) & 0x1) == 1;
        if (flip && (s & sizeT) != 0) {
            s = -s;
        }
        s += sizeS;
        s &= sizeS - 1;
    } else if (s < 0) {
        s = 0;
    } else if (s >= sizeS) {
        s = sizeS - 1;
    }

    if (repeatT) {
        bool flip = ((texImageParam >> 3) & 0x1) == 1;
        if (flip && (t & sizeT) != 0) {
            t = -t;
        }
        t += sizeT;
        t &= sizeT - 1;
    } else if (t < 0) {
        t = 0;
    } else if (t >= sizeT) {
        t = sizeT - 1;
    }

    int texFmt = (texImageParam >> 10) & 0x7;

    if (texFmt == 0) {
        color = float4(oColor, 1.0);
    } else if (texFmt == 1) {
        color = a3i5Tex(palAddr, addrOffset, s, t, sizeS);
    } else if (texFmt == 2) {
        bool transparent0 = ((texImageParam >> 13) & 0x1) == 1;
        color = pal4Tex(palAddr, addrOffset, s, t, sizeS, transparent0);
    } else if (texFmt == 3) {
        bool transparent0 = ((texImageParam >> 13) & 0x1) == 1;
        color = pal16Tex(palAddr, addrOffset, s, t, sizeS, transparent0);
    } else if (texFmt == 4) {
        bool transparent0 = ((texImageParam >> 13) & 0x1) == 1;
        color = pal256Tex(palAddr, addrOffset, s, t, sizeS, transparent0);
    } else if (texFmt == 5) {
        color = float4(0.0, 1.0, 0.0, 1.0);
    } else if (texFmt == 6) {
        color = a5i3Tex(palAddr, addrOffset, s, t, sizeS);
    } else if (texFmt == 7) {
        color = directTex(addrOffset, s, t, sizeS);
    }
}
