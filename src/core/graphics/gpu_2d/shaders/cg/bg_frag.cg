float3 in screenPos : TEXCOORD0;
float2 in screenPosF : TEXCOORD1;
float2 in affineDims : TEXCOORD2;

uniform int dispCnt;
uniform int bgCnt;
uniform int bgMode;

uniform BgUbo {
    int bgOfs[192 * 4];
    float bgX[192 * 2];
    float bgY[192 * 2];
    float bgPas[192 * 2];
    float bgPbs[192 * 2];
    float bgPcs[192 * 2];
    float bgPds[192 * 2];
} BgUbo : BUFFER[0];

uniform sampler2D bgTex : TEXUNIT0;
uniform sampler2D palTex : TEXUNIT1;
uniform sampler2D extPalTex : TEXUNIT2;
uniform sampler2D winTex : TEXUNIT3;

short readBg8(int addr) {
    short addrX = (addr >> 2) & 0x1FF;
    short addrY = addr >> 11;
    float x = float(addrX) / 511.0;
    float y = float(addrY) / (BG_TEX_HEIGHT - 1.0);
    return short(tex2D(bgTex, float2(x, y))[addr & 3] * 255.0);
}

short readBg16Aligned(int addr) {
    short addrX = (addr >> 2) & 0x1FF;
    short addrY = addr >> 11;
    float x = float(addrX) / 511.0;
    float y = float(addrY) / (BG_TEX_HEIGHT - 1.0);
    float4 value = tex2D(bgTex, float2(x, y));
    short entry = short(addr & 2);
    return short(value[entry] * 255.0) | (short(value[entry + 1] * 255.0) << 8);
}

float4 readPal(short index) {
    return tex2D(palTex, float2(float(index) / 511.0, 1.0));
}

float4 readExtPal(short index) {
    short indexX = index & 0x1FF;
    short indexY = index >> 9;
    float x = float(indexX) / 511.0;
    float y = float(indexY) / 31.0;
    return tex2D(extPalTex, float2(x, y));
}

float3 normRgb5(short color) {
    return float3(float(color & 0x1F), float((color >> 5) & 0x1F), float((color >> 10) & 0x1F)) / 31.0;
}

float4 drawText(short x, short y, short bgNum) {
    int screenAddr = ((dispCnt >> 11) & 0x70000) + ((bgCnt << 3) & 0x0F800);
    int charAddr = ((dispCnt >> 8u) & 0x70000) + ((bgCnt << 12) & 0x3C000);

    int of = BgUbo.bgOfs[bgNum * 192 + y];
    x += short(of & 0xFFFF);
    x &= 0x1FF;
    y += short(of >> 16);
    y &= 0x1FF;

    // 512 Width
    if (x > 255 && (bgCnt & (1 << 14)) != 0) {
        screenAddr += 0x800;
    }

    // 512 Height
    if (y > 255 && (bgCnt & (1 << 15)) != 0) {
        screenAddr += (bgCnt & (1 << 14)) != 0 ? 0x1000 : 0x800;
    }

    short xBlock = x & 0xF8;
    short xInBlock = x & 7;
    short yBlock = y & 0xF8;
    short yInBlock = y & 7;

    screenAddr += yBlock << 3;
    screenAddr += xBlock >> 2;
    int screenEntry = readBg16Aligned(screenAddr);

    bool isHFlip = (screenEntry & (1 << 10)) != 0;
    bool isVFlip = (screenEntry & (1 << 11)) != 0;

    if (isHFlip) {
        xInBlock = 7 - xInBlock;
    }
    if (isVFlip) {
        yInBlock = 7 - yInBlock;
    }

    bool is8bpp = (bgCnt & (1 << 7)) != 0;
    if (is8bpp) {
        charAddr += ((screenEntry & 0x3FF) << 6) + (yInBlock << 3);
        charAddr += xInBlock;

        short palIndex = readBg8(charAddr);
        if (palIndex == 0) {
            discard;
        }

        bool useExtPal = (dispCnt & (1 << 30)) != 0;
        if (useExtPal) {
            short slot = bgNum < 2 && (bgCnt & (1 << 13)) != 0 ? bgNum + 2 : bgNum;
            palIndex += slot * 4096 + ((screenEntry & 0xF000) >> 4);
            return float4(readExtPal(palIndex).rgb, 1.0);
        } else {
            return float4(readPal(palIndex).rgb, 1.0);
        }
    } else {
        charAddr += ((screenEntry & 0x3FF) << 5) + (yInBlock << 2);
        charAddr += xInBlock >> 1;

        short palIndex = readBg8(charAddr);
        palIndex >>= 4 * (xInBlock & 1);
        palIndex &= 0xF;
        if (palIndex == 0) {
            discard;
        }

        palIndex += (screenEntry & 0xF000) >> 8;
        return float4(readPal(palIndex).rgb, 1.0);
    }
}

short2 calculateAffineCoords(short x, short y, short bgNum) {
    short index = (bgNum - 2) * 192 + y;
    float bgX = BgUbo.bgX[index];
    float bgY = BgUbo.bgY[index];
    float bgPa = BgUbo.bgPas[index];
    float bgPb = BgUbo.bgPbs[index];
    float bgPc = BgUbo.bgPcs[index];
    float bgPd = BgUbo.bgPds[index];
    return short2(short(bgX + bgPb + float(x) * bgPa), short(bgY + bgPd + float(x) * bgPc));
}

float4 drawBitmap(short x, short y, short bgNum) {
    short width = short(affineDims.x);
    short height = short(affineDims.y);

    int2 coords = int2(calculateAffineCoords(x, y, bgNum));

    bool wrap = (bgCnt & (1 << 13)) != 0;
    if (wrap) {
        coords.x &= width - 1;
        coords.y &= height - 1;
    } else if (coords.x < 0 || coords.x >= width || coords.y < 0 || coords.y >= height) {
        discard;
    }

    int dataBase = (bgCnt << 6) & 0x7C000;
    bool usePal = (bgCnt & (1 << 2)) == 0;
    if (usePal) {
        int palIndex = readBg8(dataBase + coords.y * width + coords.x);
        if (palIndex == 0) {
            discard;
        }
        return float4(readPal(palIndex).rgb, 1.0);
    } else {
        short color = readBg16Aligned(dataBase + (coords.y * width + coords.x) * 2);
        if ((color & (1 << 15)) == 0) {
            discard;
        }
        return float4(normRgb5(color), 1.0);
    }
}

float4 drawAffine(int x, int y, int bgNum, bool extended) {
    short size = short(affineDims.x);

    int2 coords = int2(calculateAffineCoords(x, y, bgNum));

    bool wrap = (bgCnt & (1 << 13)) != 0;
    if (wrap) {
        coords.x &= size - 1;
        coords.y &= size - 1;
    } else if (coords.x < 0 || coords.x >= size || coords.y < 0 || coords.y >= size) {
        discard;
    }

    int screenAddr = ((dispCnt >> 11) & 0x70000) + ((bgCnt << 3) & 0x0F800);
    int charAddr = ((dispCnt >> 8) & 0x70000) + ((bgCnt << 12) & 0x3C000);

    int xBlockNum = coords.x >> 3;
    int xInBlock = coords.x & 7;
    int yBlockNum = coords.y >> 3;
    int yInBlock = coords.y & 7;

    if (extended) {
        screenAddr += (yBlockNum * (size >> 3) + xBlockNum) * 2;
        int screenEntry = readBg16Aligned(screenAddr);

        bool isHFlip = (screenEntry & (1 << 10)) != 0;
        bool isVFlip = (screenEntry & (1 << 11)) != 0;

        if (isHFlip) {
            xInBlock = 7 - xInBlock;
        }
        if (isVFlip) {
            yInBlock = 7 - yInBlock;
        }

        charAddr += (screenEntry & 0x3FF) * 64 + yInBlock * 8 + xInBlock;

        int palIndex = readBg8(charAddr);
        if (palIndex == 0) {
            discard;
        }

        bool useExtPal = (dispCnt & (1 << 30)) != 0;
        if (useExtPal) {
            palIndex += bgNum * 4096 + ((screenEntry & 0xF000) >> 4);
            return float4(readExtPal(palIndex).rgb, 1.0);
        } else {
            return float4(readPal(palIndex).rgb, 1.0);
        }
    } else {
        discard;
    }
}

void main(out float4 color : COLOR) {
    short bgNum = short(screenPos.z);

    short winEnabled = short(tex2D(winTex, screenPosF).x * 255.0);
    if ((winEnabled & (1 << bgNum)) == 0) {
        discard;
    }

    short x = short(screenPos.x);
    short y = short(screenPos.y);

    if (bgMode == 0) {
        color = drawText(x, y, bgNum);
    } else if (bgMode == 2) {
        bool isBitmap = (bgCnt & (1 << 7)) != 0;
        if (isBitmap) {
            color = drawBitmap(x, y, bgNum);
        } else {
            color = drawAffine(x, y, bgNum, true);
        }
    } else {
        discard;
    }

    short priority = short(bgCnt & 3);
    color.a = float(priority) / 4.0;
}
